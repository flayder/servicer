<!-- eslint-disable vue/multi-word-component-names -->
<script setup lang="ts">
import { GoogleMap, CustomMarker, MarkerCluster } from 'vue3-google-map';

const runtimeConfig = useRuntimeConfig()
const apiKey = runtimeConfig.public.GMAP_API_KEY


const renderer = {
  render ({ count, position }, stats) {
    // create svg url with fill color
    const svg = window.btoa(`
    <svg fill="#FF185F" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 240 240">
    <circle cx="120" cy="120" r="70" />    
    </svg>`);
    // create marker using svg icon
    return new window.google.maps.Marker({
        position,
        icon: {
            url: `data:image/svg+xml;base64,${svg}`,
            scaledSize: new window.google.maps.Size(75, 75),
        },
        label: {
            text: String(count),
            color: "rgba(255,255,255,0.9)",
            fontSize: "12px",
        },
        // adjust zIndex to be above other markers
        zIndex: Number(window.google.maps.Marker.MAX_ZINDEX) + count,
    });
  }
}

const center = { lat: -36.828611, lng: 175.790222 }


const categories = reactive([
  {
    label: 'Категория 1',
    isActive: ['true'], 
    locations: [
      { lat: -31.56391, lng: 147.154312 },
      { lat: -33.718234, lng: 150.363181 },
      { lat: -33.727111, lng: 150.371124 },
    ],
  },
  {
    label: 'Категория 2',
    isActive: ['true'], 
    locations: [
      { lat: -33.848588, lng: 151.209834 },
      { lat: -33.851702, lng: 151.216968 },
      { lat: -34.671264, lng: 150.863657 },
      { lat: -35.304724, lng: 148.662905 },
    ],
  },
  {
    label: 'Категория 3',
    isActive: ['true'], 
    locations: [
      { lat: -36.817685, lng: 175.699196 },
      { lat: -36.828611, lng: 175.790222 },
      { lat: -37.75, lng: 145.116667 },
      { lat: -37.759859, lng: 145.128708 },
    ],
  },
  {
    label: 'Категория 4',
    isActive: ['true'], 
    locations: [
      { lat: -37.765015, lng: 145.133858 },
      { lat: -37.770104, lng: 145.143299 },
      { lat: -37.7737, lng: 145.145187 },
      { lat: -37.774785, lng: 145.137978 },
    ],
  },
  {
    label: 'Категория 5',
    isActive: ['true'], 
    locations: [
      { lat: -37.819616, lng: 144.968119 },
      { lat: -38.330766, lng: 144.695692 },
      { lat: -39.927193, lng: 175.053218 },
      { lat: -41.330162, lng: 174.865694 },
      { lat: -42.734358, lng: 147.439506 },
    ],
  },
  {
    label: 'Категория 6',
    isActive: ['true'], 
    locations: [
      { lat: -42.734358, lng: 147.501315 },
      { lat: -42.735258, lng: 147.438 },
      { lat: -43.999792, lng: 170.463352 },
    ],
  },
])


const locations = computed(() => {
  return categories
    .filter(category => category.isActive[0] === 'true')
    .flatMap(category => category.locations)
})


</script>

<template>
  <section class="relative mb-20">
    <div
      class="w-screen h-[calc(100vh-76px)] object-cover rounded-quick laptop:h-[calc(100vh-124px)]"
    >
      <GoogleMap

        style="width: 100%; height: 100%"
        :api-key="apiKey"
        :center="locations.find(el => el.lat === center.lat && el.lng === center.lng)? center : locations[0]"
        :zoom="15"
      >
        <MarkerCluster :options="{
          renderer: renderer,
        }">
          <CustomMarker v-for="(location, i) in locations"
            :key="i"
            :options="{ position: location, anchorPoint: 'BOTTOM_CENTER' }"
          >
            <a href="#">
              <img src="/svg/map-marker.svg" width="37" height="42" class="object-cover" />
            </a>
          </CustomMarker>
        </MarkerCluster>
      </GoogleMap>

    </div>




    <map-filter-mobile v-model="categories" />
    <map-filter-desktop v-model="categories" />
  </section>
</template>
